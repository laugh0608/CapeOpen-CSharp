// 大白萝卜重构于 2025.05.10，使用 .NET8.O-windows、Microsoft Visual Studio 2022 Preview 和 Rider 2024.3。

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapeOpen.Properties {
    using System;
    
    /// <summary>
    /// 强类型资源类，用于查找本地化字符串等。
    /// </summary>
    // 此类由 StronglyTypedResourceBuilder 自动生成
    // 通过 ResGen 或 Visual Studio 之类的工具初始化。
    // 若要添加或移除成员，请编辑您的。ResX文件，然后重新运行 ResGen 使用 /str 选项，或者重新生成您的 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        /// 返回此类使用的缓存 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CapeOpen.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        /// 为所有重写当前线程的 CurrentUICulture 属性使用此强类型资源类的资源查找。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// 查找 System 类型的本地化资源。绘图。图标类似于(图标)。
        /// </summary>
        internal static System.Drawing.Icon epa_seal_medium {
            get {
                object obj = ResourceManager.GetObject("epa_seal_medium", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        // 查找类似以下内容的本地化字符串：
        // <?xml version="1.0" encoding="utf-8"?>
        // <CategorySpecifications>
        // <Category_Spec>
        // <Category>Mass</Category>
        // <Aspen>MASS</Aspen>
        // <SI_Unit>kg</SI_Unit>
        // <Mass>1</Mass>
        // <Time>0</Time>
        // <Length>0</Length>
        // <ElectricalCurrent>0</ElectricalCurrent>
        // <Temperature>0</Temperature>
        // <AmountOfSubstance>0</AmountOfSubstance>
        // <Luminous>0</Luminous>
        // <Currency>0</Currency>
        // <Comment>
        // </Comment>
        // </Category_Spec>
        // <Category_Spec>
        // <Category>Time</Category>
        // <!-- [rest of string was truncated] -->
        // <!-- 注意：原始字符串在这里被截断了 -->
        // </Category_Spec>
        // </CategorySpecifications>
        internal static string unitCategories {
            get {
                return ResourceManager.GetString("unitCategories", resourceCulture);
            }
        }
        
        // 查找类似以下内容的本地化字符串：
        // <?xml version="1.0" encoding="utf-8"?>
        // <Units>
        // <Unit_Specs>
        // <Unit>mol</Unit>
        // <Category>AmountOfSubstance</Category>
        // <ConversionTimes>1</ConversionTimes>
        // <ConversionPlus>0</ConversionPlus>
        // <Comments>0</Comments>
        // </Unit_Specs>
        // <Unit_Specs>
        // <Unit>US$</Unit>
        // <Category>Currency</Category>
        // <ConversionTimes>1</ConversionTimes>
        // <ConversionPlus>0</ConversionPlus>
        // <Comments>0</Comments>
        // </Unit_Specs>
        // <Unit_Specs>
        // <Unit>A/cm2</Unit>
        // <Category> <!-- [rest of string was truncated] -->
        // <!-- 注意：原始字符串在这里被截断了，<Category> 标签的内容可能不完整，或者其后的元素及闭合标签缺失。 -->
        // </Unit_Specs>
        // </Units>
        internal static string units {
            get {
                return ResourceManager.GetString("units", resourceCulture);
            }
        }
        
        // <?xml version="1.0" encoding="UTF-8"?>
        // <dataroot xmlns:od="urn:schemas-microsoft-com:officedata" generated="2008-09-23T14:52:13">
        // <data>
        // <ChemicalName>THERMINOL 55</ChemicalName>
        // <CAS> 68855-24-3</CAS>
        // <Rat_LD50_Value>3500</Rat_LD50_Value>
        // <Rat_LD50_Notes>est</Rat_LD50_Notes>
        // <Rat_LD50_Source>C</Rat_LD50_Source>
        // <OSHA_TWA_Notes>N</OSHA_TWA_Notes>
        // <FHM_LC50_Value>171</FHM_LC50_Value>
        // <FHM_LC50_Notes>est - ave</FHM_LC50_Notes>
        // <FHM_LC50_Source>Q</FHM_LC50_Source>
        // </data>
        // <data>
        // <ChemicalName>CAL <!-- [rest of string was truncated] -->
        // <!-- XML 在此截断 -->
        internal static string WARdata {
            get {
                return ResourceManager.GetString("WARdata", resourceCulture);
            }
        }
    }
}
