//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CapeOpenThermo.Web_References.intranetServer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NeqSimCOServicePortBinding", Namespace="http://neqsim/")]
    public partial class NeqSimCOService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getEntropyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getlogFugacityCoefficientsDtemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDensityOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnthalpyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVolumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getComponentNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNumberOfComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback helloOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMolecularWeightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormulaesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCASnumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBoilingPointTempsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFugacityCoefficientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTPFractionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHeatCapacityCpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHeatCapacityCvOperationCompleted;
        
        private System.Threading.SendOrPostCallback getlogFugacityCoefficientsDpressureOperationCompleted;
        
        private System.Threading.SendOrPostCallback readFluidFromGQITOperationCompleted;
        
        private System.Threading.SendOrPostCallback getlogFugacityCoefficientsDmolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNormalBoilingpointTemperaturesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NeqSimCOService() {
            this.Url = "http://pc-604459:8080/NeqSimCOService/NeqSimCOService";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getEntropyCompletedEventHandler getEntropyCompleted;
        
        /// <remarks/>
        public event getlogFugacityCoefficientsDtemperatureCompletedEventHandler getlogFugacityCoefficientsDtemperatureCompleted;
        
        /// <remarks/>
        public event getDensityCompletedEventHandler getDensityCompleted;
        
        /// <remarks/>
        public event getEnthalpyCompletedEventHandler getEnthalpyCompleted;
        
        /// <remarks/>
        public event getVolumeCompletedEventHandler getVolumeCompleted;
        
        /// <remarks/>
        public event getComponentNamesCompletedEventHandler getComponentNamesCompleted;
        
        /// <remarks/>
        public event getNumberOfComponentsCompletedEventHandler getNumberOfComponentsCompleted;
        
        /// <remarks/>
        public event helloCompletedEventHandler helloCompleted;
        
        /// <remarks/>
        public event getCompIDsCompletedEventHandler getCompIDsCompleted;
        
        /// <remarks/>
        public event getMolecularWeightsCompletedEventHandler getMolecularWeightsCompleted;
        
        /// <remarks/>
        public event getFormulaesCompletedEventHandler getFormulaesCompleted;
        
        /// <remarks/>
        public event getCASnumbersCompletedEventHandler getCASnumbersCompleted;
        
        /// <remarks/>
        public event getBoilingPointTempsCompletedEventHandler getBoilingPointTempsCompleted;
        
        /// <remarks/>
        public event getFugacityCoefficientsCompletedEventHandler getFugacityCoefficientsCompleted;
        
        /// <remarks/>
        public event setTPFractionCompletedEventHandler setTPFractionCompleted;
        
        /// <remarks/>
        public event getHeatCapacityCpCompletedEventHandler getHeatCapacityCpCompleted;
        
        /// <remarks/>
        public event getHeatCapacityCvCompletedEventHandler getHeatCapacityCvCompleted;
        
        /// <remarks/>
        public event getlogFugacityCoefficientsDpressureCompletedEventHandler getlogFugacityCoefficientsDpressureCompleted;
        
        /// <remarks/>
        public event readFluidFromGQITCompletedEventHandler readFluidFromGQITCompleted;
        
        /// <remarks/>
        public event getlogFugacityCoefficientsDmolesCompletedEventHandler getlogFugacityCoefficientsDmolesCompleted;
        
        /// <remarks/>
        public event getNormalBoilingpointTemperaturesCompletedEventHandler getNormalBoilingpointTemperaturesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getEntropy([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getEntropy", new object[] {
                        phase});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getEntropyAsync(string phase) {
            this.getEntropyAsync(phase, null);
        }
        
        /// <remarks/>
        public void getEntropyAsync(string phase, object userState) {
            if ((this.getEntropyOperationCompleted == null)) {
                this.getEntropyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntropyOperationCompleted);
            }
            this.InvokeAsync("getEntropy", new object[] {
                        phase}, this.getEntropyOperationCompleted, userState);
        }
        
        private void OngetEntropyOperationCompleted(object arg) {
            if ((this.getEntropyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntropyCompleted(this, new getEntropyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] getlogFugacityCoefficientsDtemperature([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getlogFugacityCoefficientsDtemperature", new object[] {
                        phase});
            return ((System.Nullable<double>[])(results[0]));
        }
        
        /// <remarks/>
        public void getlogFugacityCoefficientsDtemperatureAsync(string phase) {
            this.getlogFugacityCoefficientsDtemperatureAsync(phase, null);
        }
        
        /// <remarks/>
        public void getlogFugacityCoefficientsDtemperatureAsync(string phase, object userState) {
            if ((this.getlogFugacityCoefficientsDtemperatureOperationCompleted == null)) {
                this.getlogFugacityCoefficientsDtemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetlogFugacityCoefficientsDtemperatureOperationCompleted);
            }
            this.InvokeAsync("getlogFugacityCoefficientsDtemperature", new object[] {
                        phase}, this.getlogFugacityCoefficientsDtemperatureOperationCompleted, userState);
        }
        
        private void OngetlogFugacityCoefficientsDtemperatureOperationCompleted(object arg) {
            if ((this.getlogFugacityCoefficientsDtemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getlogFugacityCoefficientsDtemperatureCompleted(this, new getlogFugacityCoefficientsDtemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getDensity([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getDensity", new object[] {
                        phase});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getDensityAsync(string phase) {
            this.getDensityAsync(phase, null);
        }
        
        /// <remarks/>
        public void getDensityAsync(string phase, object userState) {
            if ((this.getDensityOperationCompleted == null)) {
                this.getDensityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDensityOperationCompleted);
            }
            this.InvokeAsync("getDensity", new object[] {
                        phase}, this.getDensityOperationCompleted, userState);
        }
        
        private void OngetDensityOperationCompleted(object arg) {
            if ((this.getDensityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDensityCompleted(this, new getDensityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getEnthalpy([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getEnthalpy", new object[] {
                        phase});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getEnthalpyAsync(string phase) {
            this.getEnthalpyAsync(phase, null);
        }
        
        /// <remarks/>
        public void getEnthalpyAsync(string phase, object userState) {
            if ((this.getEnthalpyOperationCompleted == null)) {
                this.getEnthalpyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnthalpyOperationCompleted);
            }
            this.InvokeAsync("getEnthalpy", new object[] {
                        phase}, this.getEnthalpyOperationCompleted, userState);
        }
        
        private void OngetEnthalpyOperationCompleted(object arg) {
            if ((this.getEnthalpyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnthalpyCompleted(this, new getEnthalpyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getVolume([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getVolume", new object[] {
                        phase});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getVolumeAsync(string phase) {
            this.getVolumeAsync(phase, null);
        }
        
        /// <remarks/>
        public void getVolumeAsync(string phase, object userState) {
            if ((this.getVolumeOperationCompleted == null)) {
                this.getVolumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVolumeOperationCompleted);
            }
            this.InvokeAsync("getVolume", new object[] {
                        phase}, this.getVolumeOperationCompleted, userState);
        }
        
        private void OngetVolumeOperationCompleted(object arg) {
            if ((this.getVolumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVolumeCompleted(this, new getVolumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getComponentNames() {
            object[] results = this.Invoke("getComponentNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getComponentNamesAsync() {
            this.getComponentNamesAsync(null);
        }
        
        /// <remarks/>
        public void getComponentNamesAsync(object userState) {
            if ((this.getComponentNamesOperationCompleted == null)) {
                this.getComponentNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetComponentNamesOperationCompleted);
            }
            this.InvokeAsync("getComponentNames", new object[0], this.getComponentNamesOperationCompleted, userState);
        }
        
        private void OngetComponentNamesOperationCompleted(object arg) {
            if ((this.getComponentNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getComponentNamesCompleted(this, new getComponentNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getNumberOfComponents() {
            object[] results = this.Invoke("getNumberOfComponents", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getNumberOfComponentsAsync() {
            this.getNumberOfComponentsAsync(null);
        }
        
        /// <remarks/>
        public void getNumberOfComponentsAsync(object userState) {
            if ((this.getNumberOfComponentsOperationCompleted == null)) {
                this.getNumberOfComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNumberOfComponentsOperationCompleted);
            }
            this.InvokeAsync("getNumberOfComponents", new object[0], this.getNumberOfComponentsOperationCompleted, userState);
        }
        
        private void OngetNumberOfComponentsOperationCompleted(object arg) {
            if ((this.getNumberOfComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNumberOfComponentsCompleted(this, new getNumberOfComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hello([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name) {
            object[] results = this.Invoke("hello", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void helloAsync(string name) {
            this.helloAsync(name, null);
        }
        
        /// <remarks/>
        public void helloAsync(string name, object userState) {
            if ((this.helloOperationCompleted == null)) {
                this.helloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhelloOperationCompleted);
            }
            this.InvokeAsync("hello", new object[] {
                        name}, this.helloOperationCompleted, userState);
        }
        
        private void OnhelloOperationCompleted(object arg) {
            if ((this.helloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.helloCompleted(this, new helloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getCompIDs() {
            object[] results = this.Invoke("getCompIDs", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCompIDsAsync() {
            this.getCompIDsAsync(null);
        }
        
        /// <remarks/>
        public void getCompIDsAsync(object userState) {
            if ((this.getCompIDsOperationCompleted == null)) {
                this.getCompIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompIDsOperationCompleted);
            }
            this.InvokeAsync("getCompIDs", new object[0], this.getCompIDsOperationCompleted, userState);
        }
        
        private void OngetCompIDsOperationCompleted(object arg) {
            if ((this.getCompIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompIDsCompleted(this, new getCompIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] getMolecularWeights() {
            object[] results = this.Invoke("getMolecularWeights", new object[0]);
            return ((System.Nullable<double>[])(results[0]));
        }
        
        /// <remarks/>
        public void getMolecularWeightsAsync() {
            this.getMolecularWeightsAsync(null);
        }
        
        /// <remarks/>
        public void getMolecularWeightsAsync(object userState) {
            if ((this.getMolecularWeightsOperationCompleted == null)) {
                this.getMolecularWeightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMolecularWeightsOperationCompleted);
            }
            this.InvokeAsync("getMolecularWeights", new object[0], this.getMolecularWeightsOperationCompleted, userState);
        }
        
        private void OngetMolecularWeightsOperationCompleted(object arg) {
            if ((this.getMolecularWeightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMolecularWeightsCompleted(this, new getMolecularWeightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getFormulaes() {
            object[] results = this.Invoke("getFormulaes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getFormulaesAsync() {
            this.getFormulaesAsync(null);
        }
        
        /// <remarks/>
        public void getFormulaesAsync(object userState) {
            if ((this.getFormulaesOperationCompleted == null)) {
                this.getFormulaesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormulaesOperationCompleted);
            }
            this.InvokeAsync("getFormulaes", new object[0], this.getFormulaesOperationCompleted, userState);
        }
        
        private void OngetFormulaesOperationCompleted(object arg) {
            if ((this.getFormulaesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormulaesCompleted(this, new getFormulaesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] getCASnumbers() {
            object[] results = this.Invoke("getCASnumbers", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCASnumbersAsync() {
            this.getCASnumbersAsync(null);
        }
        
        /// <remarks/>
        public void getCASnumbersAsync(object userState) {
            if ((this.getCASnumbersOperationCompleted == null)) {
                this.getCASnumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCASnumbersOperationCompleted);
            }
            this.InvokeAsync("getCASnumbers", new object[0], this.getCASnumbersOperationCompleted, userState);
        }
        
        private void OngetCASnumbersOperationCompleted(object arg) {
            if ((this.getCASnumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCASnumbersCompleted(this, new getCASnumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] getBoilingPointTemps() {
            object[] results = this.Invoke("getBoilingPointTemps", new object[0]);
            return ((System.Nullable<double>[])(results[0]));
        }
        
        /// <remarks/>
        public void getBoilingPointTempsAsync() {
            this.getBoilingPointTempsAsync(null);
        }
        
        /// <remarks/>
        public void getBoilingPointTempsAsync(object userState) {
            if ((this.getBoilingPointTempsOperationCompleted == null)) {
                this.getBoilingPointTempsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBoilingPointTempsOperationCompleted);
            }
            this.InvokeAsync("getBoilingPointTemps", new object[0], this.getBoilingPointTempsOperationCompleted, userState);
        }
        
        private void OngetBoilingPointTempsOperationCompleted(object arg) {
            if ((this.getBoilingPointTempsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBoilingPointTempsCompleted(this, new getBoilingPointTempsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] getFugacityCoefficients([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getFugacityCoefficients", new object[] {
                        phase});
            return ((System.Nullable<double>[])(results[0]));
        }
        
        /// <remarks/>
        public void getFugacityCoefficientsAsync(string phase) {
            this.getFugacityCoefficientsAsync(phase, null);
        }
        
        /// <remarks/>
        public void getFugacityCoefficientsAsync(string phase, object userState) {
            if ((this.getFugacityCoefficientsOperationCompleted == null)) {
                this.getFugacityCoefficientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFugacityCoefficientsOperationCompleted);
            }
            this.InvokeAsync("getFugacityCoefficients", new object[] {
                        phase}, this.getFugacityCoefficientsOperationCompleted, userState);
        }
        
        private void OngetFugacityCoefficientsOperationCompleted(object arg) {
            if ((this.getFugacityCoefficientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFugacityCoefficientsCompleted(this, new getFugacityCoefficientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTPFraction([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double T, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double P, [System.Xml.Serialization.XmlElementAttribute("x", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<double>[] x) {
            this.Invoke("setTPFraction", new object[] {
                        T,
                        P,
                        x});
        }
        
        /// <remarks/>
        public void setTPFractionAsync(double T, double P, System.Nullable<double>[] x) {
            this.setTPFractionAsync(T, P, x, null);
        }
        
        /// <remarks/>
        public void setTPFractionAsync(double T, double P, System.Nullable<double>[] x, object userState) {
            if ((this.setTPFractionOperationCompleted == null)) {
                this.setTPFractionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTPFractionOperationCompleted);
            }
            this.InvokeAsync("setTPFraction", new object[] {
                        T,
                        P,
                        x}, this.setTPFractionOperationCompleted, userState);
        }
        
        private void OnsetTPFractionOperationCompleted(object arg) {
            if ((this.setTPFractionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTPFractionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getHeatCapacityCp([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getHeatCapacityCp", new object[] {
                        phase});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getHeatCapacityCpAsync(string phase) {
            this.getHeatCapacityCpAsync(phase, null);
        }
        
        /// <remarks/>
        public void getHeatCapacityCpAsync(string phase, object userState) {
            if ((this.getHeatCapacityCpOperationCompleted == null)) {
                this.getHeatCapacityCpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeatCapacityCpOperationCompleted);
            }
            this.InvokeAsync("getHeatCapacityCp", new object[] {
                        phase}, this.getHeatCapacityCpOperationCompleted, userState);
        }
        
        private void OngetHeatCapacityCpOperationCompleted(object arg) {
            if ((this.getHeatCapacityCpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeatCapacityCpCompleted(this, new getHeatCapacityCpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getHeatCapacityCv([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getHeatCapacityCv", new object[] {
                        phase});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getHeatCapacityCvAsync(string phase) {
            this.getHeatCapacityCvAsync(phase, null);
        }
        
        /// <remarks/>
        public void getHeatCapacityCvAsync(string phase, object userState) {
            if ((this.getHeatCapacityCvOperationCompleted == null)) {
                this.getHeatCapacityCvOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeatCapacityCvOperationCompleted);
            }
            this.InvokeAsync("getHeatCapacityCv", new object[] {
                        phase}, this.getHeatCapacityCvOperationCompleted, userState);
        }
        
        private void OngetHeatCapacityCvOperationCompleted(object arg) {
            if ((this.getHeatCapacityCvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeatCapacityCvCompleted(this, new getHeatCapacityCvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] getlogFugacityCoefficientsDpressure([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getlogFugacityCoefficientsDpressure", new object[] {
                        phase});
            return ((System.Nullable<double>[])(results[0]));
        }
        
        /// <remarks/>
        public void getlogFugacityCoefficientsDpressureAsync(string phase) {
            this.getlogFugacityCoefficientsDpressureAsync(phase, null);
        }
        
        /// <remarks/>
        public void getlogFugacityCoefficientsDpressureAsync(string phase, object userState) {
            if ((this.getlogFugacityCoefficientsDpressureOperationCompleted == null)) {
                this.getlogFugacityCoefficientsDpressureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetlogFugacityCoefficientsDpressureOperationCompleted);
            }
            this.InvokeAsync("getlogFugacityCoefficientsDpressure", new object[] {
                        phase}, this.getlogFugacityCoefficientsDpressureOperationCompleted, userState);
        }
        
        private void OngetlogFugacityCoefficientsDpressureOperationCompleted(object arg) {
            if ((this.getlogFugacityCoefficientsDpressureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getlogFugacityCoefficientsDpressureCompleted(this, new getlogFugacityCoefficientsDpressureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void readFluidFromGQIT([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int fluidID) {
            this.Invoke("readFluidFromGQIT", new object[] {
                        fluidID});
        }
        
        /// <remarks/>
        public void readFluidFromGQITAsync(int fluidID) {
            this.readFluidFromGQITAsync(fluidID, null);
        }
        
        /// <remarks/>
        public void readFluidFromGQITAsync(int fluidID, object userState) {
            if ((this.readFluidFromGQITOperationCompleted == null)) {
                this.readFluidFromGQITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadFluidFromGQITOperationCompleted);
            }
            this.InvokeAsync("readFluidFromGQIT", new object[] {
                        fluidID}, this.readFluidFromGQITOperationCompleted, userState);
        }
        
        private void OnreadFluidFromGQITOperationCompleted(object arg) {
            if ((this.readFluidFromGQITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readFluidFromGQITCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public doubleArray[] getlogFugacityCoefficientsDmoles([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phase) {
            object[] results = this.Invoke("getlogFugacityCoefficientsDmoles", new object[] {
                        phase});
            return ((doubleArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getlogFugacityCoefficientsDmolesAsync(string phase) {
            this.getlogFugacityCoefficientsDmolesAsync(phase, null);
        }
        
        /// <remarks/>
        public void getlogFugacityCoefficientsDmolesAsync(string phase, object userState) {
            if ((this.getlogFugacityCoefficientsDmolesOperationCompleted == null)) {
                this.getlogFugacityCoefficientsDmolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetlogFugacityCoefficientsDmolesOperationCompleted);
            }
            this.InvokeAsync("getlogFugacityCoefficientsDmoles", new object[] {
                        phase}, this.getlogFugacityCoefficientsDmolesOperationCompleted, userState);
        }
        
        private void OngetlogFugacityCoefficientsDmolesOperationCompleted(object arg) {
            if ((this.getlogFugacityCoefficientsDmolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getlogFugacityCoefficientsDmolesCompleted(this, new getlogFugacityCoefficientsDmolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://neqsim/", ResponseNamespace="http://neqsim/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] getNormalBoilingpointTemperatures() {
            object[] results = this.Invoke("getNormalBoilingpointTemperatures", new object[0]);
            return ((System.Nullable<double>[])(results[0]));
        }
        
        /// <remarks/>
        public void getNormalBoilingpointTemperaturesAsync() {
            this.getNormalBoilingpointTemperaturesAsync(null);
        }
        
        /// <remarks/>
        public void getNormalBoilingpointTemperaturesAsync(object userState) {
            if ((this.getNormalBoilingpointTemperaturesOperationCompleted == null)) {
                this.getNormalBoilingpointTemperaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNormalBoilingpointTemperaturesOperationCompleted);
            }
            this.InvokeAsync("getNormalBoilingpointTemperatures", new object[0], this.getNormalBoilingpointTemperaturesOperationCompleted, userState);
        }
        
        private void OngetNormalBoilingpointTemperaturesOperationCompleted(object arg) {
            if ((this.getNormalBoilingpointTemperaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNormalBoilingpointTemperaturesCompleted(this, new getNormalBoilingpointTemperaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jaxb.dev.java.net/array")]
    public partial class doubleArray {
        
        private System.Nullable<double>[] itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<double>[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getEntropyCompletedEventHandler(object sender, getEntropyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntropyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntropyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getlogFugacityCoefficientsDtemperatureCompletedEventHandler(object sender, getlogFugacityCoefficientsDtemperatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getlogFugacityCoefficientsDtemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getlogFugacityCoefficientsDtemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getDensityCompletedEventHandler(object sender, getDensityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDensityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDensityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getEnthalpyCompletedEventHandler(object sender, getEnthalpyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnthalpyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnthalpyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getVolumeCompletedEventHandler(object sender, getVolumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVolumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVolumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getComponentNamesCompletedEventHandler(object sender, getComponentNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getComponentNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getComponentNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getNumberOfComponentsCompletedEventHandler(object sender, getNumberOfComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNumberOfComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNumberOfComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void helloCompletedEventHandler(object sender, helloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class helloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal helloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCompIDsCompletedEventHandler(object sender, getCompIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getMolecularWeightsCompletedEventHandler(object sender, getMolecularWeightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMolecularWeightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMolecularWeightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getFormulaesCompletedEventHandler(object sender, getFormulaesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormulaesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormulaesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCASnumbersCompletedEventHandler(object sender, getCASnumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCASnumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCASnumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getBoilingPointTempsCompletedEventHandler(object sender, getBoilingPointTempsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBoilingPointTempsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBoilingPointTempsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getFugacityCoefficientsCompletedEventHandler(object sender, getFugacityCoefficientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFugacityCoefficientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFugacityCoefficientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setTPFractionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getHeatCapacityCpCompletedEventHandler(object sender, getHeatCapacityCpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHeatCapacityCpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHeatCapacityCpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getHeatCapacityCvCompletedEventHandler(object sender, getHeatCapacityCvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHeatCapacityCvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHeatCapacityCvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getlogFugacityCoefficientsDpressureCompletedEventHandler(object sender, getlogFugacityCoefficientsDpressureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getlogFugacityCoefficientsDpressureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getlogFugacityCoefficientsDpressureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void readFluidFromGQITCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getlogFugacityCoefficientsDmolesCompletedEventHandler(object sender, getlogFugacityCoefficientsDmolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getlogFugacityCoefficientsDmolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getlogFugacityCoefficientsDmolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public doubleArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((doubleArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getNormalBoilingpointTemperaturesCompletedEventHandler(object sender, getNormalBoilingpointTemperaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNormalBoilingpointTemperaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNormalBoilingpointTemperaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double>[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591